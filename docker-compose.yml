# version: '3.4'

# services:
#   realtorhubapi:
#     image: ${DOCKER_REGISTRY-}realtorhubapi
#     build:
#       context: .
#       dockerfile: src/RealtorHubAPI/Dockerfile

####################################
## working old one
####################################
# version: '3.4'

# networks:
#   monitoring:
#     driver: bridge

# volumes:
#   prometheus-data:
#     driver: local
#   grafana-data:
#     driver: local


# services:
#   realtorhubapi:
#     image: ${DOCKER_REGISTRY-}realtorhubapi
#     build:
#       context: .
#       dockerfile: src/RealtorHubAPI/Dockerfile

#     depends_on:
#       - otel-collector
#     ports:
#       - 5131:5131
#     environment:
#       - ASPNETCORE_ENVIRONMENT=Staging
#       - DB_CONNECTION=${DB_CONNECTION}
#       - Otel__Endpoint=http://otel-collector:4317
#     networks:
#       - monitoring

#   otel-collector:
#     image: otel/opentelemetry-collector:latest
#     command: ["--config=/etc/otel-collector-config.yml"]
#     volumes:
#       - ./config/otel-collector-config.yml:/etc/otel-collector-config.yml
#     ports:
#       - "8888:8888" 
#       - "8889:8889" 
#       - "13133:13133"
#       - "4317:4317"
#     networks:
#       - monitoring

#   prometheus:
#     image: prom/prometheus:latest
#     container_name: otel-prometheus
#     ports:
#       - 9090:9090
#     command:
#       - '--config.file=/etc/prometheus/prometheus.yml'
#     volumes:
#       - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
#       - prometheus-data:/prometheus
#     restart: unless-stopped
#     networks:
#       - monitoring

#   grafana:
#     image: grafana/grafana-oss:latest
#     container_name: otel-grafana-1
#     ports:
#       - '3000:3000'
#     volumes:
#       - grafana-data:/var/lib/grafana
#     restart: unless-stopped
#     networks:
#       - monitoring

#   node_exporter:
#     image: quay.io/prometheus/node-exporter:v1.5.0
#     container_name: otel-node_exporter
#     command: '--path.rootfs=/host'
#     pid: host
#     restart: unless-stopped
#     volumes:
#       - /proc:/host/proc:ro
#       - /sys:/host/sys:ro
#       - /:/rootfs:ro
#     networks:
#       - monitoring



###################################
###Testing
##################################
# services:
#   realtorhubapi:
#     image: abdulquddusnuhu/realtorhubapi:staging
#     ports:
#       - "5131:5131"
#     environment:
#       - ASPNETCORE_ENVIRONMENT=Production
#       - DB_CONNECTION=${DB_CONNECTION}
#       - JWT_SECRET_KEY=${JWT_SECRET_KEY}
#       - Otel__Endpoint=http://otel-collector:4317
#     networks:
#       - monitoring

#   otel-collector:
#     image: otel/opentelemetry-collector:latest
#     command: ["--config=/etc/otel-collector-config.yml"]
#     volumes:
#       - ./config/otel-collector-config.yml:/etc/otel-collector-config.yml
#     ports:
#       - "8888:8888"
#       - "8889:8889"
#       - "13133:13133"
#       - "4317:4317"
#     networks:
#       - monitoring

#   prometheus:
#     image: prom/prometheus:latest
#     container_name: otel-prometheus
#     ports:
#       - "9090:9090"
#     command:
#       - '--config.file=/etc/prometheus/prometheus.yml'
#     volumes:
#       - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
#       - prometheus-data:/prometheus
#     restart: unless-stopped
#     networks:
#       - monitoring

#   grafana:
#     image: grafana/grafana-oss:latest
#     container_name: otel-grafana-1
#     ports:
#       - "3000:3000"
#     volumes:
#       - grafana-data:/var/lib/grafana
#     restart: unless-stopped
#     networks:
#       - monitoring

#   node_exporter:
#     image: quay.io/prometheus/node-exporter:v1.5.0
#     container_name: otel-node_exporter
#     command: '--path.rootfs=/host'
#     pid: host
#     restart: unless-stopped
#     volumes:
#       - /proc:/host/proc:ro
#       - /sys:/host/sys:ro
#       - /:/rootfs:ro
#     networks:
#       - monitoring

# networks:
#   monitoring:
#     driver: bridge

# volumes:
#   prometheus-data:
#     driver: local
#   grafana-data:
#     driver: local



###########################
#3
##########################
# services:
#   realtorhubapi:
#     image: abdulquddusnuhu/realtorhubapi:staging
#     ports:
#       - "5131:5131"
#     environment:
#       - ASPNETCORE_ENVIRONMENT=Production
#       - DB_CONNECTION=${DB_CONNECTION}
#       - JWT_SECRET_KEY=${JWT_SECRET_KEY}
#       - Otel__Endpoint=http://otel-collector:4317
#     networks:
#       - monitoring

#   otel-collector:
#     image: otel/opentelemetry-collector:latest
#     command: ["--config=/etc/otel-collector-config.yml"]
#     volumes:
#       - ${REMOTE_TARGET_STAGING}/config/otel-collector-config.yml:/etc/otel-collector-config.yml:ro
#     ports:
#       - "8888:8888"
#       - "8889:8889"
#       - "13133:13133"
#       - "4317:4317"
#     networks:
#       - monitoring

#   prometheus:
#     image: prom/prometheus:latest
#     container_name: otel-prometheus
#     ports:
#       - "9090:9090"
#     command:
#       - '--config.file=/etc/prometheus/prometheus.yml'
#     volumes:
#       - ${REMOTE_TARGET_STAGING}/config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
#       - prometheus-data:/prometheus
#     restart: unless-stopped
#     networks:
#       - monitoring

#   grafana:
#     image: grafana/grafana-oss:latest
#     container_name: otel-grafana-1
#     ports:
#       - "3000:3000"
#     volumes:
#       - grafana-data:/var/lib/grafana
#     restart: unless-stopped
#     networks:
#       - monitoring

#   node_exporter:
#     image: quay.io/prometheus/node-exporter:v1.5.0
#     container_name: otel-node_exporter
#     command: '--path.rootfs=/host'
#     pid: host
#     restart: unless-stopped
#     volumes:
#       - /proc:/host/proc:ro
#       - /sys:/host/sys:ro
#       - /:/rootfs:ro
#     networks:
#       - monitoring

# networks:
#   monitoring:
#     driver: bridge

# volumes:
#   prometheus-data:
#     driver: local
#   grafana-data:
#     driver: local

services:
  realtorhubapi:
    image: abdulquddusnuhu/realtorhubapi:staging
    ports:
      - "4100:4100"
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
      - DB_CONNECTION=${DB_CONNECTION}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - Otel__Endpoint=http://otel-collector:4317
    networks:
      - monitoring

  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - /var/www/apps/staging/RealtorHubAPI/config/otel-collector-config.yml:/etc/otel-collector-config.yml:ro
    ports:
      - "8888:8888"
      - "8889:8889"
      - "13133:13133"
      - "4317:4317"
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: otel-prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - /var/www/apps/staging/RealtorHubAPI/config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    restart: unless-stopped
    networks:
      - monitoring

  grafana:
    image: grafana/grafana-oss:latest
    container_name: otel-grafana-1
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - monitoring

  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.5.0
    container_name: otel-node_exporter
    command: '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

